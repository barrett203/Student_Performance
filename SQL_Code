#Check for missing values:
SELECT 
    COUNT(*) - COUNT(gender) AS missing_gender,
    COUNT(*) - COUNT(ethnicity) AS missing_ethnicity,
    COUNT(*) - COUNT(parental_education) AS missing_parent_edu,
    COUNT(*) - COUNT(lunch) AS missing_lunch,
    COUNT(*) - COUNT(test_preparation) AS missing_test_prep,
    COUNT(*) - COUNT(math_score) AS missing_math,
    COUNT(*) - COUNT(reading_score) AS missing_reading,
    COUNT(*) - COUNT(writing_score) AS missing_writing
FROM `studentsystem-452900.StudentPerformance.Students`

#Checking for duplicates:
SELECT *, COUNT(*) AS duplicate_count
FROM `studentsystem-452900.StudentPerformance.Students`
GROUP BY gender, ethnicity, parental_education, lunch, 
         test_preparation, math_score, reading_score, writing_score
HAVING COUNT(*) > 1;

# Showcase the count of each unique variable that may impact student test performance:
SELECT gender AS category, COUNT(*) AS count FROM `studentsystem-452900.StudentPerformance.Students` GROUP BY gender
UNION ALL
SELECT ethnicity AS category, COUNT(*) FROM `studentsystem-452900.StudentPerformance.Students` GROUP BY ethnicity
UNION ALL
SELECT parental_education AS category, COUNT(*) FROM `studentsystem-452900.StudentPerformance.Students` GROUP BY parental_education
UNION ALL
SELECT lunch AS category, COUNT(*) FROM `studentsystem-452900.StudentPerformance.Students` GROUP BY lunch
UNION ALL
SELECT test_preparation AS category, COUNT(*) FROM `studentsystem-452900.StudentPerformance.Students` GROUP BY test_preparation;

#Showcase average test scores 
SELECT
    MIN(math_score) AS min_math, MAX(math_score) AS max_math, AVG(math_score) AS avg_math,
    MIN(reading_score) AS min_reading, MAX(reading_score) AS max_reading, AVG(reading_score) AS avg_reading,
    MIN(writing_score) AS min_writing, MAX(writing_score) AS max_writing, AVG(writing_score) AS avg_writing
FROM `studentsystem-452900.StudentPerformance.Students`

#Standard deviation, variance and range of test scores 
SELECT 
    STDDEV(math_score) AS stddev_math, 
    VARIANCE(math_score) AS variance_math,
    MAX(math_score) - MIN(math_score) AS range_math,

    STDDEV(reading_score) AS stddev_reading, 
    VARIANCE(reading_score) AS variance_reading,
    MAX(reading_score) - MIN(reading_score) AS range_reading,

    STDDEV(writing_score) AS stddev_writing, 
    VARIANCE(writing_score) AS variance_writing,
    MAX(writing_score) - MIN(writing_score) AS range_writing
FROM `studentsystem-452900.StudentPerformance.Students`

#Effect of gender:
SELECT gender,
       AVG(math_score) AS avg_math, 
       AVG(reading_score) AS avg_reading, 
       AVG(writing_score) AS avg_writing
FROM `studentsystem-452900.StudentPerformance.Students`
GROUP BY gender;

#Effect of ethnicity
SELECT ethnicity,
       AVG(math_score) AS avg_math, 
       AVG(reading_score) AS avg_reading, 
       AVG(writing_score) AS avg_writing
FROM `studentsystem-452900.StudentPerformance.Students`
GROUP BY ethnicity;

#Effect of parental education level
SELECT parental_education,
       AVG(math_score) AS avg_math, 
       AVG(reading_score) AS avg_reading, 
       AVG(writing_score) AS avg_writing
FROM `studentsystem-452900.StudentPerformance.Students`
GROUP BY parental_education;

#Effect of lunch entitlement 
SELECT lunch,
       AVG(math_score) AS avg_math, 
       AVG(reading_score) AS avg_reading, 
       AVG(writing_score) AS avg_writing
FROM `studentsystem-452900.StudentPerformance.Students`
GROUP BY lunch;

#Effect of test population
SELECT test_preparation,
       AVG(math_score) AS avg_math, 
       AVG(reading_score) AS avg_reading, 
       AVG(writing_score) AS avg_writing
FROM `studentsystem-452900.StudentPerformance.Students`
GROUP BY test_preparation;

#Effect of gender and ethnicity on test scores:
SELECT gender, ethnicity,
       AVG(math_score) AS avg_math, 
       AVG(reading_score) AS avg_reading, 
       AVG(writing_score) AS avg_writing
FROM `studentsystem-452900.StudentPerformance.Students`
GROUP BY gender, ethnicity;

#Effect of parental education, lunch entitlement and test preparation:
SELECT test_preparation, lunch, parental_education,
       AVG(math_score) AS avg_math, 
       AVG(reading_score) AS avg_reading, 
       AVG(writing_score) AS avg_writing
FROM `studentsystem-452900.StudentPerformance.Students`
GROUP BY test_preparation, lunch, parental_education;

